

#--------------------event attendees ----------------------

admin_eventattendees_list:
    pattern: admin/events/eventattendees/*/*/*
    listeners:
        - { 'event': 'request_start', 'listener': 'components\events\listeners\LoadEventListener', 'datasource': 'datasource1' }
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventAttendeesController
        model: components\events\models\EventAttendeeModel
        method: listallByEventId
        view: core\views\TemplateView
        viewKey: admin_eventattendees_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]

     
#--------------------event locations ----------------------      
    
admin_eventlocations_edit:
    pattern: admin/events/eventlocations/*
    listeners:
        - { 'event': 'request_start', 'listener': 'core\eventlisteners\LoadListListener', 'datasource': 'datasource1', 'class': 'components\geography\models\ProvinceModel', 'cacheKey': 'Provinces' }
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventLocationsController
        model: components\events\models\EventLocationModel
        method: edit
        view: core\views\TemplateView
        viewKey: admin_eventlocations_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]     
    
admin_eventlocations_save:
    pattern: admin/events/eventlocations/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventLocationsController
        model: components\events\models\EventLocationModel
        method: save
        view: core\views\TemplateView
        viewKey: admin_eventlocations_save
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]   
    
admin_eventlocations_list:
    pattern: admin/events/eventlocations/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventLocationsController
        model: components\events\models\EventLocationModel
        method: listall
        view: core\views\TemplateView
        viewKey: admin_eventlocations_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]
    
    
    #------------------- event types ---------------------
       
    
super_event_types_edit:
    pattern: super/events/eventtypes/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventTypesController
        model: components\events\models\EventTypeModel
        method: edit
        view: core\views\AJAXHTMLView
        viewKey: admin_event_types_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]     
    
super_event_types_save:
    pattern: super/events/eventtypes/*
    listeners:
        - { 'event': 'save_success', 'listener': 'core\eventlisteners\DeleteCacheFileListener', 'datasource': 'datasource1' }
    
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventTypesController
        model: components\events\models\EventTypeModel
        method: save
        view: core\views\JSONView
        viewKey: super_event_types_save
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]   
    

super_eventtypes_remove:
    pattern: super/events/eventtypes/remove/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventTypesController
        model: components\events\models\EventTypeModel
        method: setInactive
        view: core\views\JSONView
        viewKey: super_eventtypes_remove
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]     
    
        
super_event_types_list:
    pattern: super/events/eventtypes/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventTypesController
        model: components\events\models\EventTypeModel
        method: listall
        view: core\views\TemplateView
        viewKey: super_event_types_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]
    
    

    
    
#------------------- event contacts ---------------------
#this is for contacts associated with an event 
# ie: for more information, call so-and-so at this number...
#--------------------------------------------------------
    
admin_event_contacts_edit:
    pattern: admin/events/eventcontacts/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventContactsController
        model: components\events\models\EventContactModel
        method: edit
        view: core\views\TemplateView
        viewKey: admin_event_contacts_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]     
    
admin_event_contacts_save:
    pattern: admin/events/eventcontacts/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventContactsController
        model: components\events\models\EventContactModel
        method: save
        view: core\views\TemplateView
        viewKey: admin_event_contacts_save
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]   
    
admin_event_contacts_list:
    pattern: admin/events/eventcontacts/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventContactsController
        model: components\events\models\EventContactModel
        method: listall
        view: core\views\TemplateView
        viewKey: admin_event_contacts_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]
        
        


    
    
#------------------- event prospects ---------------------
    
admin_event_prospects_edit:
    pattern: admin/events/eventprospects/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventProspectsController
        model: components\events\models\EventProspectModel
        method: edit
        view: core\views\TemplateView
        viewKey: admin_event_prospects_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]     
    
admin_event_prospects_save:
    pattern: admin/events/eventprospects/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventProspectsController
        model: components\events\models\EventProspectModel
        method: save
        view: core\views\TemplateView
        viewKey: admin_event_prospects_save
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]  
    
admin_event_prospects_list:
    pattern: admin/events/eventprospects/*/*
    listeners:
        - { 'event': 'request_start', 'listener': 'core\eventlisteners\LoadListListener', 'datasource': 'datasource1', 'class': 'components\events\models\EventModel', 'cacheKey': 'Events' }
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventProspectsController
        model: components\events\models\EventProspectModel
        method: listall
        view: core\views\TemplateView
        viewKey: admin_event_prospects_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET] 
    
admin_event_prospects_list_by_event:
    pattern: admin/events/eventprospects/*/*/*
    listeners:
        - { 'event': 'request_start', 'listener': 'core\eventlisteners\LoadListListener', 'datasource': 'datasource1', 'class': 'components\events\models\EventModel', 'cacheKey': 'Events' }
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventProspectsController
        model: components\events\models\EventProspectModel
        method: listallByEventId
        view: core\views\TemplateView
        viewKey: admin_event_prospects_list_by_event
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]
                
   
# --------------------------event lists ------------------------
admin_eventlists_list: 
    pattern: admin/events/lists/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\InviteListsController
        model: components\events\models\InviteListModel
        method: listall
        view: core\views\TemplateView
        viewKey: admin_eventlists_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]                 
 
admin_eventlists_edit: 
    pattern: admin/events/lists/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\InviteListsController
        model: components\events\models\InviteListModel
        method: edit
        view: core\views\TemplateView
        viewKey: admin_eventlists_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET] 
    
     
admin_eventlists_save: 
    pattern: admin/events/lists/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\InviteListsController
        model: components\events\models\InviteListModel
        method: save
        view: core\views\TemplateView
        viewKey: admin_eventlists_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]  
    
    
    
#--------------------eventlist contacts-----------------------
admin_eventlist_contacts_list: 
    pattern: admin/events/list/*/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\InviteListContactsController
        model: components\events\models\InviteListContactModel
        method: listallByListId
        view: core\views\TemplateView
        viewKey: admin_eventlist_contacts_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET] 
    
    
    
    
    
#------------------Event invitation lists assigned to an Event

admin_events_invitelists_list: 
    pattern: admin/events/invitations/*/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventInviteListController
        model: components\events\models\EventInviteListModel
        method: listallByEventId
        view: core\views\TemplateView
        viewKey: admin_eventlist_contacts_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]     
    
                
        
#----------------event admin notification settings ---------------------------               
                
admin_events_notificationsettings_edit:                
    pattern: admin/events/settings/*              
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventNotificationsController
        model: components\events\models\EventNotificationModel
        method: edit
        view: core\views\TemplateView
        viewKey: admin_events_notificationsettings_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]              
                
  
admin_events_notificationsettings_save:                
    pattern: admin/events/settings/*             
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventNotificationsController
        model: components\events\models\EventNotificationModel
        method: save
        view: core\views\TemplateView
        viewKey: admin_events_notificationsettings_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]                 
                
                
                
                
                
                
                
                
#-----------put this as the final default for admin section ----                
# -----------------------events ---------------------                
        
admin_events_edit: 
    pattern: admin/events/*
    listeners:
        - { 'event': 'request_start', 'listener': 'core\eventlisteners\LoadListListener', 'datasource': 'datasource1', 'class': 'components\events\models\EventContactModel', 'cacheKey': 'EventContacts' }
        - { 'event': 'request_start', 'listener': 'core\eventlisteners\LoadListListener', 'datasource': 'datasource1', 'class': 'components\events\models\EventLocationModel', 'cacheKey': 'EventLocations' }
        - { 'event': 'request_start', 'listener': 'core\eventlisteners\LoadListListener', 'datasource': 'datasource1', 'class': 'components\events\models\EventTypeModel', 'cacheKey': 'EventTypes' }
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsController
        model: components\events\models\EventModel
        method: edit
        view: core\views\TemplateView
        viewKey: admin_events_edit
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]          
    
admin_events_save: 
    pattern: admin/events/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsController
        model: components\events\models\EventModel
        method: save
        view: core\views\TemplateView
        viewKey: admin_events_save
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]   
    
admin_events_list: 
    pattern: admin/events/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsController
        model: components\events\models\EventModel
        method: listall
        view: core\views\TemplateView
        viewKey: admin_events_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]      
    
    
 

    
#--------------------------------------------------------------------------    
#--------------------------- portal section -------------------------------
#--------------------------------------------------------------------------


#this needs to only list events that a contact has been granted access to.
#instead of using listall we will use listAllByContact.
portal_events_list: 
    pattern: portal/events/*/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsController
        model: components\events\models\EventModel
        method: listallByContact
        view: core\views\TemplateView
        viewKey: portal_events_list
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET]     
 
#this node has to be in front of portal_events_view
portal_events_not_found: 
    pattern: portal/events/notfound
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsController
        model: components\events\models\EventModel
        method: index
        view: core\views\TemplateView
        viewKey: portal_events_not_found
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [GET] 

 

portal_events_rsvp_complete: 
    pattern: portal/events/rsvpcomplete
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsController
        model: components\events\models\EventModel
        method: index
        view: core\views\TemplateView
        viewKey: portal_events_rsvp_complete
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    

portal_events_ceilingnav:
    pattern: portal/events/ceilingnav
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsMenuController
        model: components\events\models\EventModel
        method: view
        view: core\views\TemplateView
        viewKey: portal_events_ceilingnav
        datasource: datasource1
        langFiles:   
            - 'src/components/events/locales/*/Events'  
    
portal_events_view: 
    pattern: portal/events/*
    listeners:
        - { 'event': 'request_start', 'listener': 'components\events\listeners\CheckClientAccessToEventListener', 'datasource': 'datasource1' }
        - { 'event': 'event_loaded', 'listener': 'components\events\listeners\LoadLocationListener', 'datasource': 'datasource1' }
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsController
        model: components\events\models\EventModel
        method: view
        view: core\views\TemplateView
        viewKey: portal_events_view
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
            - 'src/components/events/locales/*/Events'  
    methods: [GET]  
    
portal_events_rsvp_save: 
    pattern: portal/events/*
    defaults:
        component: components\events\EventsComponent
        controller: components\events\controllers\EventsContactsController
        model: components\events\models\EventAttendeeModel
        method: rsvp
        view: core\views\TemplateView
        viewKey: portal_events_rsvp_save
        datasource: datasource1
        langFiles: 
            - 'src/framework/core/components/locales/resources/*/Navigation'  
    methods: [POST]        
    